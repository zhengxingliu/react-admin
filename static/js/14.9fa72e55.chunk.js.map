{"version":3,"sources":["views/Login/index.js"],"names":["wrapperCol","span","offset","Login","connect","state","isLogin","user","isLoading","login","submitLogin","userInfo","props","mixedContentWarning","message","description","duration","key","openNotification","open","icon","style","color","this","close","to","spinning","theme","mode","defaultSelectedKeys","Item","justify","className","paddingTop","xs","sm","md","lg","title","name","initialValues","remember","onFinish","rules","required","prefix","placeholder","type","valuePropName","noStyle","htmlType","Component"],"mappings":"uZAOMA,EAAa,CACjBC,KAAM,EACNC,OAAQ,IASJC,EADLC,aALgB,SAAAC,GAAK,MAAK,CACzBC,QAASD,EAAME,KAAKD,QACpBE,UAAWH,EAAME,KAAKC,aAGL,CAACC,W,+MAElBC,YAAc,SAACC,GACb,EAAKC,MAAMH,MAAME,I,EAMnBE,oBAAsB,WACpB,YAAwB,CACtBC,QAAS,wBACTC,YACE,mKAEFC,SAAU,EACVC,IAAK,mB,EAITC,iBAAmB,WACjB,IAAaC,KAAK,CAChBL,QAAS,QACTC,YACE,kGACFK,KAAM,kBAAC,IAAD,CAAeC,MAAO,CAAEC,MAAO,aACrCN,SAAU,EACVC,IAAK,mB,kEAMPM,KAAKL,qB,6CAIL,IAAaM,MAAM,mB,+BAGnB,OACED,KAAKX,MAAMN,QAEX,kBAAC,IAAD,CAAUmB,GAAG,WAEb,uBAAMC,SAAUH,KAAKX,MAAMJ,WACzB,uBAAMmB,MAAM,QAAQC,KAAK,aAAaC,oBAAqB,CAAC,MAC1D,sBAAMC,KAAN,CAAWb,IAAI,KACb,6CAIJ,uBAAKc,QAAQ,SAASC,UAAU,gBAAgBX,MAAO,CAACY,WAAY,OAClE,uBAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/B,uBAAMC,MAAM,SACV,uBACEC,KAAK,eACLP,UAAU,aACVQ,cAAe,CAAEC,UAAU,GAC3BC,SAAUnB,KAAKb,aAEf,sBAAMoB,KAAN,CACES,KAAK,WACLI,MAAO,CAAC,CAAEC,UAAU,EAAM9B,QAAS,gCAEnC,uBAAO+B,OAAQ,kBAAC,IAAD,CAAcb,UAAU,wBAA0Bc,YAAY,cAE/E,sBAAMhB,KAAN,CACES,KAAK,WACLI,MAAO,CAAC,CAAEC,UAAU,EAAM9B,QAAS,gCAEnC,uBACE+B,OAAQ,kBAAC,IAAD,CAAcb,UAAU,wBAChCe,KAAK,WACLD,YAAY,cAGhB,sBAAMhB,KAAN,KACE,sBAAMA,KAAN,CAAWS,KAAK,WAAWS,cAAc,UAAUC,SAAO,GACxD,4CAOJ,sBAAMnB,KAAN,CAAY9B,WAAYA,GACtB,uBAAQ+C,KAAK,UAAUG,SAAS,SAASlB,UAAU,qBAAnD,oB,GAtFEmB,e,EAuGLhD","file":"static/js/14.9fa72e55.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Input, Button, Checkbox, Card, Col, Row, Menu, Spin, notification} from 'antd'\nimport { UserOutlined, LockOutlined, SmileOutlined} from '@ant-design/icons'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from '../../actions/user'\n\nconst wrapperCol = {\n  span: 4,\n  offset: 10\n}\n\nconst mapState = state => ({\n  isLogin: state.user.isLogin,\n  isLoading: state.user.isLoading\n})\n\n@connect(mapState, {login})\nclass Login extends Component {\n  submitLogin = (userInfo) => {\n    this.props.login(userInfo)\n    // this.mixedContentWarning()\n  }\n\n  // Enable mixed content in browser for hosting on Github page, ajax is blocked from https (github) to http (rap2)\n  // TODO: fix mixed content error\n  mixedContentWarning = () => {\n    notification['warning']({\n      message: 'Mixed Content Request',\n      description: \n        'If login is not redirecting, enable mixed content in your browser. The mock api server is using http instead of https, allow insure content in browser settting.',\n      // icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n      duration: 0,\n      key: 'login-message'\n    })\n  }\n\n  openNotification = () => {\n    notification.open({\n      message: 'Hello',\n      description: \n        'This is a demo for a company admin website frontend, login with any mock username and password.',\n      icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n      duration: 0,\n      key: 'login-message'\n    })\n    \n  }\n\n  componentDidMount() {\n    this.openNotification()\n  }\n\n  componentWillUnmount() {\n    notification.close('login-message')\n  }\n  render() {\n    return (\n      this.props.isLogin \n      ?\n      <Redirect to='/admin' />\n      :\n      <Spin spinning={this.props.isLoading}>\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key=\"1\">\n            <h2>React Admin</h2>\n          </Menu.Item>\n        </Menu>\n\n        <Row justify=\"center\" className='login-wrapper' style={{paddingTop: '5%'}} >\n          <Col xs={20} sm={16} md={12} lg={8}>\n            <Card title='Login'>\n              <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{ remember: true }}\n                onFinish={this.submitLogin}\n              >\n                <Form.Item\n                  name=\"username\"\n                  rules={[{ required: true, message: 'Please input your Username' }]}\n                >\n                  <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"password\"\n                  rules={[{ required: true, message: 'Please input your Password' }]}\n                >\n                  <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Item>\n                <Form.Item>\n                  <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                    <Checkbox>Remember me</Checkbox>\n                  </Form.Item>\n\n                  {/* <a className=\"login-form-forgot\" href=\"\">\n                    Forgot password\n                  </a> */}\n                </Form.Item>\n                <Form.Item  wrapperCol={wrapperCol}>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Log in\n                  </Button>\n                  {/* Or <a href=\"\">register now!</a> */}\n                </Form.Item>\n              \n\n              \n              </Form>\n            </Card>\n          </Col>\n        </Row>\n      </Spin>\n     \n    )\n  }\n}\nexport default Login"],"sourceRoot":""}