{"version":3,"sources":["views/Notifications/index.js"],"names":["Notifications","connect","state","notifications","list","isLoading","markNotificationAsReadById","markNotificationAsUnReadById","markAllNotificationsAsRead","spinning","this","props","title","bordered","extra","onClick","disabled","every","item","hasRead","itemLayout","dataSource","renderItem","Item","style","display","justifyContent","actions","color","overlayStyle","fontSize","height","mouseEnterDelay","bind","id","loading","icon","Meta","flex","avatar","src","href","dot","offset","description","desc","Component"],"mappings":"iVAqBMA,EADLC,aARgB,SAAAC,GAAU,IAAD,EACIA,EAAMC,cAClC,MAAO,CACLC,KAHsB,EAChBA,KAGNC,UAJsB,EACVA,aAOG,CAACC,+BAA4BC,iCAA8BC,gC,0KAElE,IAAD,OACP,OACE,uBAAMC,SAAUC,KAAKC,MAAMN,WACzB,uBACAO,MAAM,gBACNC,UAAU,EACVC,MACE,uBACEC,QAASL,KAAKC,MAAMH,2BACpBQ,SAAUN,KAAKC,MAAMP,KAAKa,OAAM,SAAAC,GAAI,OAAqB,IAAjBA,EAAKC,YAF/C,qBAQF,uBACIC,WAAW,aACXC,WAAYX,KAAKC,MAAMP,KACvBkB,WAAY,SAAAJ,GAAI,OACd,sBAAMK,KAAN,CACEC,MAAO,CAACC,QAAS,OAAQC,eAAgB,UACzCC,QAAS,CAEPT,EAAKC,QACH,uBAASP,MAAM,0BACbgB,MAAO,qBAAsBC,aAAc,CAACC,SAAU,OAAQC,OAAQ,QAASC,gBAAiB,IAEhG,uBACEjB,QAAS,EAAKJ,MAAMJ,6BAA6B0B,KAAK,EAAMf,EAAKgB,IACjEC,QAASjB,EAAKb,UACd+B,KAAM,kBAAC,IAAD,SAGV,uBAAUxB,MAAM,wBACdgB,MAAO,qBAAsBC,aAAc,CAACC,SAAU,OAAQC,OAAQ,QAASC,gBAAiB,IAEhG,uBACEjB,QAAS,EAAKJ,MAAML,2BAA2B2B,KAAK,EAAMf,EAAKgB,IAC/DC,QAASjB,EAAKb,UACd+B,KAAM,kBAAC,IAAD,WAKd,sBAAMb,KAAKc,KAAX,CACEb,MAAO,CAACc,KAAM,YAEdC,OAAQ,uBAAQC,IAAI,qEACpB5B,MAAO,uBAAG6B,KAAK,wBAAwB,uBAAOC,KAAMxB,EAAKC,QAASwB,OAAQ,CAAC,EAAG,IAAMzB,EAAKN,QACzFgC,YAAa1B,EAAK2B,iB,GAlDRC,e,EA8Db9C","file":"static/js/17.e95a2996.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { Card, Button, List, Avatar, Badge, Tooltip, Spin} from 'antd'\nimport { MailTwoTone, CheckOutlined} from '@ant-design/icons'\n\nimport { connect } from 'react-redux'\nimport { \n  markNotificationAsReadById,\n  markNotificationAsUnReadById,\n  markAllNotificationsAsRead,\n} from '../../actions/notifications'\n\nconst mapState = state => {\n  const { list, isLoading } = state.notifications\n  return {\n    list,\n    isLoading\n  }\n}\n\n@connect(mapState, {markNotificationAsReadById, markNotificationAsUnReadById, markAllNotificationsAsRead})\nclass Notifications extends Component {\n  render() {\n    return (\n      <Spin spinning={this.props.isLoading}>\n        <Card\n        title='Notifications'\n        bordered={false}\n        extra={\n          <Button \n            onClick={this.props.markAllNotificationsAsRead}\n            disabled={this.props.list.every(item => item.hasRead === true)}>\n            Mark all as read\n          </Button>\n        }\n        >\n\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={this.props.list}\n            renderItem={item => (\n              <List.Item\n                style={{display: 'flex', justifyContent: 'center'}}\n                actions={[\n                \n                  item.hasRead \n                  ? <Tooltip title='click to mark as unread' \n                      color={'rgba(0, 0, 0, 0.3)'} overlayStyle={{fontSize: '10px', height: '35px'}} mouseEnterDelay={0.5} \n                    >\n                      <Button \n                        onClick={this.props.markNotificationAsUnReadById.bind(this, item.id)} \n                        loading={item.isLoading}\n                        icon={<CheckOutlined />}\n                      />\n                    </Tooltip>\n                  : < Tooltip title='click to mark as read' \n                      color={'rgba(0, 0, 0, 0.3)'} overlayStyle={{fontSize: '10px', height: '35px'}} mouseEnterDelay={0.5}\n                    >\n                      <Button \n                        onClick={this.props.markNotificationAsReadById.bind(this, item.id)} \n                        loading={item.isLoading}\n                        icon={<MailTwoTone />}\n                      />\n                    </Tooltip>\n                ]}\n              >\n                <List.Item.Meta\n                  style={{flex: '1 1 auto' }}\n\n                  avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                  title={<a href=\"/admin/notifications\">{<Badge dot={!item.hasRead} offset={[4, 0]} >{item.title}</Badge>}</a>}\n                  description={item.desc}\n                />\n              </List.Item>\n            )}\n        />\n\n        </Card>\n      </Spin>\n    )\n  }\n}\n\nexport default Notifications"],"sourceRoot":""}