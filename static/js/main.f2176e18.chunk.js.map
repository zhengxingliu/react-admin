{"version":3,"sources":["actions/user.js","actions/notifications.js","components/Navbar/AdminLogo.png","components/Loading/index.js","components/Navbar/index.js","components/Footer/index.js","views/index.js","routes/index.js","App.js","reducers/notifications.js","reducers/user.js","reducers/index.js","store.js","index.js","requests/index.js","actions/actionTypes.js"],"names":["loginFailed","window","localStorage","removeItem","sessionStorage","type","actionTypes","LOGIN_FAILED","login","userInfo","dispatch","START_LOGIN","remember","loginRequest","then","res","status","data","authToken","setItem","JSON","stringify","LOGIN_SUCCESS","payload","loginSuccess","catch","err","console","log","logout","change_avator","avatarUrl","CHANGE_AVATAR","startUpdatingNotificationState","id","START_UPDATING_NOTICIFATION_STATE","finishUpdatingNotificationState","FINISH_UPDATING_NOTIFICATION_STATE","markNotificationAsReadById","setTimeout","MARK_NOTIFICATION_AS_READ_BY_ID","markNotificationAsUnReadById","MARK_NOTIFICATION_AS_UNREAD_BY_ID","markAllNotificationsAsRead","MARK_ALL_NOTIFICATIONS_AS_READ","getNotificationList","FETCH_NOTIFICATIONS","getNotifications","RECEVIED_NOTIFICATIONS","list","module","exports","Loading","Header","Content","Sider","SideNav","connect","state","notificationCount","notifications","filter","item","hasRead","length","avatar","user","displayName","withRouter","onDropMenuClick","key","props","history","push","renderMenu","onClick","Item","dot","this","menus","adminRoutes","route","isNav","className","href","src","logo","alt","overlay","style","display","alignItems","count","padding","DownOutlined","breakpoint","collapsedWidth","zIndex","menuClicked","mode","defaultSelectedKeys","pathname","selectedKeys","location","defaultOpenKeys","height","borderRight","map","menu","icon","to","title","margin","backgroundColor","children","Component","Footer","Date","getFullYear","Dashboard","loadable","fallback","Login","NotFound","Settings","Notifications","ArticleList","ArticleEdit","NoAuth","Profile","mainRoutes","component","DashboardOutlined","role","exact","FileTextOutlined","SettingOutlined","App","isLogin","Navbar","path","render","routerProps","includes","from","initState","isLoading","Boolean","getItem","parse","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","store","document","querySelector","request","axios","create","baseURL","request1","interceptors","use","config","response","resp","parseInt","code","errMsg","error","getArticleList","offset","limited","post","deleteArticle","delete","getArticleById","saveEditArticle","put","getSiteVisitStatistics"],"mappings":"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","file":"static/js/main.f2176e18.chunk.js","sourcesContent":["import actionTypes from './actionTypes'\nimport { loginRequest } from '../requests'\n\nconst startLogin  =  () => {\n  return {\n    type: actionTypes.START_LOGIN,\n  }\n}\n\nconst loginSuccess  =  (userInfo) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    payload: {userInfo}\n  }\n}\n\nconst loginFailed  =  () => {\n  window.localStorage.removeItem('authToken')\n  window.sessionStorage.removeItem('authToken')\n  window.localStorage.removeItem('userInfo')\n  window.sessionStorage.removeItem('userInfo')\n  return {\n    type: actionTypes.LOGIN_FAILED,\n  }\n}\n\nexport const login = (userInfo) => dispatch => {\n  dispatch(startLogin())\n  const remember = userInfo.remember\n  loginRequest(userInfo)\n    .then(res => {\n      if (res.status === 200) {\n        //store authentication\n        const {authToken, ...userInfo} = res.data.data\n        if (remember === true) {\n          window.localStorage.setItem('authToken', authToken)\n          window.localStorage.setItem('userInfo', JSON.stringify(userInfo))\n        } else {\n          window.sessionStorage.setItem('authToken', authToken)\n          window.sessionStorage.setItem('userInfo', JSON.stringify(userInfo))\n        }\n        dispatch(loginSuccess(res.data.data))\n      } else {\n        dispatch(loginFailed())\n      }\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\nexport const logout = () => dispatch => {\n  //TODO: notify backend server about logout \n  dispatch(loginFailed())\n}\n\nexport const change_avator = (avatarUrl) => {\n  return {\n    type: actionTypes.CHANGE_AVATAR,\n    payload: {\n      avatarUrl\n    }\n  }\n}","import actionTypes from './actionTypes'\nimport { getNotifications } from '../requests'\n\nexport const startUpdatingNotificationState = (id) => {\n  return {\n    type: actionTypes.START_UPDATING_NOTICIFATION_STATE,\n    payload: {\n      id\n    }\n  }\n}\n\nexport const finishUpdatingNotificationState = (id) => {\n  return {\n    type: actionTypes.FINISH_UPDATING_NOTIFICATION_STATE,\n    payload: {\n      id\n    }\n  }\n}\n\nexport const markNotificationAsReadById = (id) => {\n  //dispatch for async requests, mock with setTimeout \n  return dispatch => {\n    dispatch(startUpdatingNotificationState(id))\n    setTimeout(() => {\n      dispatch({\n        type: actionTypes.MARK_NOTIFICATION_AS_READ_BY_ID,\n        payload: {\n          id\n        }\n      })\n      dispatch(finishUpdatingNotificationState(id))\n    }, 500)\n  }\n}\n\nexport const markNotificationAsUnReadById = (id) => {\n  //dispatch for async requests, mock with setTimeout \n  return dispatch => {\n    dispatch(startUpdatingNotificationState(id))\n    setTimeout(() => {\n      dispatch({\n        type: actionTypes.MARK_NOTIFICATION_AS_UNREAD_BY_ID,\n        payload: {\n          id\n        }\n      })\n      dispatch(finishUpdatingNotificationState(id))\n    }, 500)\n  }\n}\n\nexport const markAllNotificationsAsRead = () => dispatch => {\n  //dispatch for async requests, mock with setTimeout \n  dispatch(startUpdatingNotificationState())\n  setTimeout(() => {\n    dispatch({\n      type: actionTypes.MARK_ALL_NOTIFICATIONS_AS_READ\n    })\n    dispatch(finishUpdatingNotificationState())\n  }, 500)\n}\n\nexport const getNotificationList = () => dispatch => {\n  dispatch({\n    type: actionTypes.FETCH_NOTIFICATIONS\n  })\n  getNotifications()\n    .then(res => {\n      dispatch({\n        type: actionTypes.RECEVIED_NOTIFICATIONS,\n        payload: {\n          list:  res.data.list\n        } \n      })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}","module.exports = __webpack_public_path__ + \"static/media/AdminLogo.b14db446.png\";","import React from 'react'\n\nexport default function Loading() {\n  return (\n    <div>\n      loading...\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Layout, Menu, Dropdown, Avatar, Badge } from \"antd\"\nimport { DownOutlined } from '@ant-design/icons'\nimport { connect } from 'react-redux'\n\nimport { getNotificationList } from '../../actions/notifications'\nimport { logout } from '../../actions/user'\n\nimport \"./navbar.less\"\n// import logo from \"./logo.png\"\nimport logo from \"./AdminLogo.png\"\nimport { adminRoutes } from \"../../routes\"\nimport { Footer } from \"..\"\n\n\nconst { Header, Content, Sider } = Layout\n\nconst mapState = state => {\n  return {\n    notificationCount: state.notifications.list.filter(item => item.hasRead === false).length,\n    avatar: state.user.avatar,\n    displayName: state.user.displayName\n  }\n}\n\n@connect(mapState, {getNotificationList, logout})\n@withRouter\nclass SideNav extends Component {\n\n  componentDidMount() {\n    this.props.getNotificationList()\n  }\n\n  onDropMenuClick = ({key}) => {\n    if (key === '/logout') {\n      this.props.logout()\n    } else {\n      this.props.history.push(key)\n    }\n  }\n\n  renderMenu = () => (\n      <Menu onClick={this.onDropMenuClick}>\n        <Menu.Item key='/admin/notifications'>\n          <Badge dot={this.props.notificationCount}>\n            Notification\n          </Badge>\n        </Menu.Item>\n        <Menu.Item key='/admin/profile'>\n          Account Setting\n        </Menu.Item>\n        <Menu.Item key='/logout'>\n          Log Out\n        </Menu.Item>\n    </Menu>\n  )\n\n \n\n  render() {\n    // let breadcrumbs = this.props.location.pathname.split(\"/\")\n    // breadcrumbs = breadcrumbs.filter((item) => item !== \"\")\n     \n    const menus = adminRoutes.filter((route) => route.isNav === true)\n\n    return (\n      <Layout className='main-layout'>\n        <Header className=\"header main-header\">\n          <div className=\"logo main-logo\">\n            <a href='/'>\n              <img src={logo} alt=\"react-admin\" />\n              <h1> React Admin</h1>\n            </a>\n          </div>\n          <div>\n         \n          <Dropdown overlay={this.renderMenu()}>\n            <div style={{display: 'flex', alignItems: 'center'}}>\n              <Badge count={this.props.notificationCount} >\n                <Avatar src={this.props.avatar} /> \n              </Badge>\n                <span style={{padding: '0 4px 0 4px'}}>Hello, {this.props.displayName}</span>\n              <DownOutlined />    \n            </div>\n          </Dropdown>\n        \n          \n          </div>\n\n        </Header>\n        <Layout>\n          <Sider breakpoint=\"lg\" collapsedWidth=\"0\" style={{zIndex: 100}}>\n            <Menu \n              onClick={this.menuClicked}\n              mode=\"inline\"\n              defaultSelectedKeys={menus[0].pathname}\n              selectedKeys={this.props.location.pathname}\n              defaultOpenKeys={menus[0].pathname}\n              style={{ height: \"100%\", borderRight: 0 }}\n            >\n              {menus.map((menu) => {\n                return (\n                  <Menu.Item key={menu.pathname} icon={<menu.icon />}>\n                    <Link to={menu.pathname}> {menu.title}</Link>\n                  </Menu.Item>\n                )\n              })}\n            </Menu>\n          </Sider>\n          <Layout className='content-layout' style={{ padding: \"24px\"}}>\n            {/* <Breadcrumb style={{ margin: \"16px 0\" }}>\n              {breadcrumbs.map((item) => {\n                return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>\n              })}\n            </Breadcrumb> */}\n\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                // padding: 24,\n                margin: 0,\n                // minHeight: 280,\n                backgroundColor: \"#FFF\"\n              }}\n            >\n\n              <div className=\"content\" style={{height: '100px'}}>\n                {this.props.children} \n              </div>\n              <Footer/>\n            </Content>\n            \n                         \n          </Layout>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default SideNav\n","import React, { Component } from 'react'\n\nimport './footer.less'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div className='footer'>\n        <span>Demo website</span>\n        <span>Mock API using <a href='http://rap2.taobao.org/'>Rap2</a></span>\n        &copy; {new Date().getFullYear()}\n      </div>\n    )\n  }\n}\n","/*  \n-Login\n-404\n-admin\n  -dashboard\n  -article\n    -List\n    -edit\n  -setting\n*/\n\nimport React from \"react\"\n// import Loadable from 'react-loadable'\nimport loadable from '@loadable/component'\n// import pMinDelay from 'p-min-delay'\n\nimport { Loading } from '../components'\n\n// import Dashboard from './Dashboard'\n// import Login from './Login'\n// import NotFound from './NotFound'\n// import Settings from './Settings'\n// import ArticleList from './Article/index'\n// import ArticleEdit from './Article/edit'\n\n\n// const Dashboard = loadable(() => \n//   pMinDelay(\n//     import('./Dashboard'), {fallback:  <Loading/>},\n//     200\n// ))\n\nconst Dashboard = loadable(() => import('./Dashboard'), {\n  fallback:  <Loading/>\n})\n\nconst Login = loadable(() => import('./Login'), {\n  fallback:  <Loading/>\n})\n\nconst NotFound = loadable(() => import('./NotFound'), {\n  fallback:  <Loading/>\n})\n\nconst Settings = loadable(() => import('./Settings'), {\n  fallback: <Loading/>\n})\n\nconst Notifications = loadable(() => import('./Notifications'), {\n  fallback: <Loading/>\n})\n\nconst ArticleList = loadable(() => import('./Article/index'), {\n  fallback:  <Loading/>\n})\n\nconst ArticleEdit = loadable(() => import('./Article/Edit'), {\n  fallback:  <Loading/>\n})\n\nconst NoAuth = loadable(() => import('./NoAuth'), {\n  fallback:  <Loading/>\n})\n\nconst Profile = loadable(() => import('./Profile'), {\n  fallback:  <Loading/>\n})\n// old config with react-loadable\n\n// const Dashboard = Loadable({\n//   loader: () => import('./Dashboard'),\n//   loading: Loading\n// })\n\n\nexport {\n  Dashboard, \n  Login, \n  NotFound, \n  Settings,\n  Notifications,\n  ArticleList,\n  ArticleEdit,\n  NoAuth,\n  Profile\n} ","import { DashboardOutlined, FileTextOutlined, SettingOutlined} from \"@ant-design/icons\"\n\nimport {\n  Dashboard, \n  Login, \n  NotFound, \n  Settings,\n  Notifications,\n  ArticleList,\n  ArticleEdit,\n  NoAuth,\n  Profile\n} from '../views'\n\n\nexport const mainRoutes =  [{\n  pathname: '/login',\n  component: Login\n},{\n  pathname: '/404',\n  component: NotFound\n}]\n\n\nexport const adminRoutes = [{\n  pathname: '/admin/dashboard',\n  component: Dashboard,\n  title: 'Dashboard',\n  isNav: true,\n  icon: DashboardOutlined,\n  role: ['001', '002', '003']\n  /* \n  authorization role which has access to different levels of pages\n  001: super admin\n  002: regular admin\n  003: basic user\n  */\n\n},{\n  pathname: '/admin/article',\n  component: ArticleList,\n  exact: true,\n  title: 'Article List',\n  isNav: true,\n  icon: FileTextOutlined,\n  role: ['001', '002', '003']\n\n},{\n  pathname: '/admin/article/edit/:id',\n  component: ArticleEdit,\n  role: ['001', '002']\n},{\n  pathname: '/admin/settings',\n  component: Settings,\n  title: 'Settings',\n  isNav: true,\n  icon: SettingOutlined,\n  role: ['001']\n},{\n  pathname: '/admin/notifications',\n  component: Notifications,\n  title: 'Notifications',\n  role: ['001', '002', '003']\n},{\n  pathname: '/admin/profile',\n  component: Profile,\n  role: ['001', '002', '003']\n},{\n  pathname: '/admin/no-auth',\n  component: NoAuth,\n  role: ['001', '002', '003']\n}]","import React, { Component } from \"react\"\nimport { Route, Switch, Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux'\n\nimport { adminRoutes } from \"./routes\"\n\nimport { Navbar } from \"./components\"\n\nconst mapStateToProps = state => ({\n  isLogin: state.user.isLogin,\n  role: state.user.role\n})\n\n\n@connect(mapStateToProps)\nclass App extends Component {\n\n  render() {\n    return (\n    \n      this.props.isLogin \n      ?\n      <Navbar>\n        <Switch>\n          {adminRoutes.map((route) => {\n            return (\n              <Route\n                key={route.pathname}\n                path={route.pathname}\n                exact={route.exact}\n                render={(routerProps) => {\n                  // check authorizaiton role\n                  const hasPermission = route.role.includes(this.props.role)\n                  return hasPermission ? <route.component {...routerProps} /> : <Redirect to='/admin/no-auth'/>\n                }}\n              />\n            )\n          })}\n          {/* redirect to dashboard */}\n          <Redirect to={adminRoutes[0].pathname} from=\"/admin\" exact />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </Navbar>\n      : <Redirect to='/login'/>\n    )\n  }\n}\n\nexport default App\n","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  list: [\n    // {\n    //   id: 1,\n    //   title: 'eum et est occaecati',\n    //   desc: 'ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit',\n    //   hasRead: false,\n    //   isLoading: false\n    // },{\n    //   id: 2,\n    //   title: 'quo vero reiciendis velit similique earum',\n    //   desc: 'est natus enim nihil est dolore omnis voluptatem numquam\\net omnis occaecati quod ullam at\\nvoluptatem error expedita pariatur\\nnihil sint nostrum voluptatem reiciendis et',\n    //   hasRead: false,\n    //   isLoading: false\n    // }\n  ],\n  isLoading: false\n}\n\nexport default (state=initState, action) => {\n  switch(action.type){\n    case actionTypes.START_UPDATING_NOTICIFATION_STATE:\n        return {\n          ...state,\n          list: state.list.map(item => {\n            if (action.payload.id) {\n              if (item.id === action.payload.id) item.isLoading = true\n            } else {\n              if (item.hasRead === false) item.isLoading = true\n            }\n            return item\n          })\n        }\n\n    case actionTypes.FINISH_UPDATING_NOTIFICATION_STATE:\n      return {\n        ...state,\n        list: state.list.map(item => {\n          if (action.payload.id) {\n            if (item.id === action.payload.id) item.isLoading = false\n          } else {\n            if (item.hasRead === true) item.isLoading = false\n          }\n          return item\n        })\n      }\n   \n    case actionTypes.MARK_NOTIFICATION_AS_READ_BY_ID:\n      return {\n        ...state,\n        list: state.list.map(item => {\n          if (item.id === action.payload.id ) {\n            item.hasRead = true\n          } \n          return item  \n        })\n      }\n\n    case actionTypes.MARK_NOTIFICATION_AS_UNREAD_BY_ID:\n      return {\n        ...state, \n        list: state.list.map(item => {\n          if (item.id === action.payload.id) {\n            item.hasRead = false\n          }\n          return item\n        })\n      }\n\n    case actionTypes.MARK_ALL_NOTIFICATIONS_AS_READ:\n      return {\n        ...state,\n        list: state.list.map(item => {\n          item.hasRead = true\n          return item\n        })\n      }\n\n    case actionTypes.RECEVIED_NOTIFICATIONS:\n      return {\n        ...state,\n        list: action.payload.list,\n        isLoading: false\n      }\n    \n    case actionTypes.FETCH_NOTIFICATIONS:\n      return {\n        ...state,\n        isLoading: true,\n      }\n\n    default: return state\n  }\n}","import actionTypes from \"../actions/actionTypes\"\n\nconst isLogin = Boolean(window.localStorage.getItem('authToken')) || Boolean(window.sessionStorage.getItem('authToken'))\nconst userInfo = JSON.parse(window.localStorage.getItem('userInfo')) || JSON.parse(window.sessionStorage.getItem('userInfo'))\n\nconst initState = {\n  ...userInfo,\n  isLogin,\n  isLoading: false,\n}\n\nexport default (state=initState, action) => {\n  switch(action.type) {\n    case actionTypes.START_LOGIN:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        ...action.payload.userInfo,\n        isLoading: false,\n        isLogin: true\n      }\n    case actionTypes.LOGIN_FAILED:\n      return {\n        id: '',\n        displayName: '',\n        avatar: '',\n        isLogin: false,\n        isLoading: false,\n        role: []\n      }\n    case actionTypes.CHANGE_AVATAR:\n      return {\n        ...state,\n        avatar: action.payload.avatarUrl\n      }\n    default: \n      return state\n  }\n} ","import { combineReducers} from 'redux'\n\nimport notifications from './notifications'\nimport user from './user'\n\nexport default combineReducers({\n  notifications,\n  user\n})","import { createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\nexport default createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n)","import React from 'react'\nimport { render } from 'react-dom'\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n\nimport App from './App'\nimport './index.less'\n\nimport store from './store'\n\nimport { mainRoutes } from './routes'\n\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route path='/admin' render={(routerProps) => {\n          return <App  {...routerProps} /> \n        }} />\n        <Redirect to='/admin' from='/' exact/>\n      {\n        mainRoutes.map(route => {\n          return <Route key={route.pathname} path={route.pathname} component={route.component} />\n        })\n      }\n        <Redirect to='/404'/>\n      </Switch>\n    </Router>\n  </Provider>,\n  document.querySelector('#root')\n  \n) ","import axios from 'axios'\nimport { message } from 'antd'\n\nconst isDev = process.env.NODE_ENV === 'development'\n\n\nconst request = axios.create({\n  baseURL: isDev? 'http://rap2.taobao.org:38080/app/mock/259142' : 'http://rap2.taobao.org:38080/app/mock/259142'\n  // baseURL: isDev? 'http://localhost:8080' : ''\n  // headers: {\n  //   'Content-Type': 'application/json',\n  // },\n})\n\n// no interceptor version\nconst request1 = axios.create({\n  baseURL: isDev? 'http://rap2.taobao.org:38080/app/mock/259142' : 'http://rap2.taobao.org:38080/app/mock/259142'\n})\n\n\nrequest.interceptors.request.use((config) => {\n  // pass in request body params \n  config.data = {\n    ...config.data,\n    // 'authToken' : window.localStorage.getItem('authToken')\n    authToken: 'Bearer-tokenplaceholder'\n  }\n  return config\n})\n\nrequest.interceptors.response.use((resp) => {\n  if (parseInt(resp.data.code) === 200 && resp.data.errMsg === '') {\n    return resp.data\n  } else {\n    // handle error globally \n    // message.error(resp.data.errMsg);\n    message.error('An error occurred.')\n  }\n})\n\nexport const getArticleList = (offset=0, limited=10) => {\n  return request.post('/api/v1/articlelist', \n  {\n    //body params\n    offset,\n    limited,\n  })\n}\n\nexport const deleteArticle = (id) => {\n  return request.delete(`/api/v1/article/${id}`)\n}\n\nexport const getArticleById = (id) => {\n  return request.post(`/api/v1/article/:${id}`)\n}\n\nexport const saveEditArticle = (id, data) => {\n  return request.put(`/api/v1/article/:${id}`, data)\n\n}\n\nexport const getSiteVisitStatistics = () => {\n  return request.post('/api/v1/statistics/visits')\n}\n\nexport const getNotifications = () => {\n  return request.post('/api/v1/notifications')\n}\n\nexport const loginRequest = (userInfo) => {\n  return request1.post('/api/v1/login', userInfo)\n}","export default {\n  MARK_NOTIFICATION_AS_READ_BY_ID: 'MARK_NOTIFICATION_AS_READ_BY_ID',\n  MARK_NOTIFICATION_AS_UNREAD_BY_ID: 'MARK_NOTIFICATION_AS_UNREAD_BY_ID',\n  MARK_ALL_NOTIFICATIONS_AS_READ: 'MARK_ALL_NOTIFICATIONS_AS_READ',\n  START_UPDATING_NOTICIFATION_STATE: 'START_UPDATING_NOTICIFATION_STATE',\n  FINISH_UPDATING_NOTIFICATION_STATE: 'FINISH_UPDATING_NOTIFICATION_STATE',\n  RECEVIED_NOTIFICATIONS: 'RECEVIED_NOTIFICATIONS',\n  FETCH_NOTIFICATIONS: 'FETCH_NOTIFICATIONS',\n\n  START_LOGIN: 'START_LOGIN',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILED: 'LOGIN_FAILED',\n\n  CHANGE_AVATAR: 'CHANGE_AVATAR'\n} \n\n"],"sourceRoot":""}